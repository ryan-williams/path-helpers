#!/usr/bin/env bash

# Path env-var shorthands
export home="$HOME"

export ph="$(dirname "${BASH_SOURCE[0]}")"

# PATH initialization
#append_to_path "/opt/google/depot_tools"
append_to_path "/usr/sbin"
append_to_path "/usr/include"
append_to_path "/sbin"
append_to_path "/sw/bin"
prepend_to_path "$HOME/bin"
prepend_to_path "$HOME/node/bin"
prepend_to_path "$HOME/sbin"

append_to_path "$HOME/local/bin"
prepend_to_path "$HOME/.local/bin"

prepend_to_path "$s"
prepend_to_path "$s/py"

append_to_path "$HOME"  # Add $HOME to $PATH

ep() {
  echo "$PATH" | splt :
}

prepend_to "C_INCLUDE_PATH" "/usr/local/include"

alias bne=basename-minus-extension

alias de=drop-extension
alias dx=drop-extension
alias dxn=drop-extension

alias xn=extension
alias exn=extension
alias xtn=extension

alias bn=rich-basename
alias bnx=basename-minus-extension

defn cz canonicalize

defn czl realpath

defn ul readlink
defn ulm readlink -m
defn ule readlink -e

defn dn multi-dirname
ldn() {
  l "$(dn "$@")"
}

local cur_dir="$(dirname "${BASH_SOURCE[0]}")"
readlink_path="$cur_dir/readlink"

if [ ! -e "$readlink_path" ]; then
  if which greadlink &> /dev/null; then
    cmd="greadlink"
  elif which readlink &> /dev/null; then
    cmd="readlink"
  else
    echo "Warning: no readlink or greadlink found" 1>&2
  fi

  if [ -n "$cmd" ]; then
    full_cmd="$(which "$cmd")"
    echo "Making readlinkg symlink: $readlink_path -> $full_cmd"
    ln -sf "$full_cmd" "$readlink_path"
  fi
fi

defn pdn pwd-dirname
defn pbn pwd-basename

alias pcs=path-cols

export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$HOME/lib"
